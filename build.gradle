plugins {
    id "fabric-loom" version "1.3-SNAPSHOT"
    id "org.ajoberstar.grgit" version "5.2.0"
}

version = "${getVersionMetadata()}+$target_version"
group = maven_group

base {
    //noinspection GrDeprecatedAPIUsage
    archivesBaseName = archives_base_name
}

repositories {
    maven { url 'https://jitpack.io' }
}

dependencies {
    minecraft "com.mojang:minecraft:$minecraft_version"
    mappings "com.github.RedLime:yarn:$project.yarn_mappings:v2"
    modImplementation "net.fabricmc:fabric-loader:$loader_version"
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    it.options.release.set(8)
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

jar {
    from("LICENSE") {
        rename { "${it}_${base.archivesName.get()}" }
    }
}


@SuppressWarnings('GrMethodMayBeStatic')
def getVersionMetadata() {
    // CI build version numbers
    def build_id = System.getenv("RELEASE_TAG")
    if (build_id != null) return build_id

    // development builds
    if (grgit == null) return "dev"

    // named development builds
    def id = grgit.head().getAbbreviatedId()
    if (!grgit.status().clean) id += "-dirty"

    return "rev.$id"
}